"use strict";(()=>{var a={};a.id=378,a.ids=[378],a.modules={762:a=>{a.exports=import("@neondatabase/serverless")},5600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},5751:a=>{a.exports=require("xlsx")},7442:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{default:()=>h});var e=c(762),f=c(5751),g=a([e]);e=(g.then?(await g)():g)[0];let i=process.env.DATABASE_URL;async function h(a,b){if("POST"!==a.method)return b.status(405).json({message:"Method Not Allowed"});let{sessionId:c,excelFileBase64:d,fileName:g}=a.body;if(!c||!d||!g)return b.status(400).json({message:"Missing session ID, file data, or file name."});let h=new e.Pool({connectionString:i});try{let a=await h.query("SELECT user_id, expires_at FROM sessions WHERE session_id = $1 AND expires_at > NOW()",[c]);if(0===a.rows.length)return b.status(401).json({message:"Unauthorized: Invalid or expired session."});let e=a.rows[0].user_id,i=Buffer.from(d,"base64"),j=f.read(i,{type:"buffer"}),k="Overview";if(!j.SheetNames.includes(k))return b.status(400).json({message:"Excel file must contain an 'Overview' sheet."});let l=j.Sheets[k],m={};for(let a of[{cellRange:"K6:AD6",description:"Time interval headers",fieldName:"frequency_interval",dataType:"string"},{cellRange:"J7",description:"Income source label 1",fieldName:"income_source_1",dataType:"string"},{cellRange:"K7:AD7",description:"Income source 1 values by time interval",fieldName:"income_source_1_values",dataType:"decimal"},{cellRange:"J8",description:"Income source label 2",fieldName:"income_source_2",dataType:"string"},{cellRange:"K8:AD8",description:"Income source 2 values by time interval",fieldName:"income_source_2_values",dataType:"decimal"},{cellRange:"J18",description:"Total income label",fieldName:"income_total_label",dataType:"string"},{cellRange:"K18:AD18",description:"Total income values by time interval",fieldName:"income_totals",dataType:"decimal"},{cellRange:"J23:J34",description:"Expense category labels",fieldName:"expense_categories",dataType:"string"},{cellRange:"K23:AD34",description:"Expense values by category and time interval",fieldName:"expense_values",dataType:"decimal"},{cellRange:"J35",description:"Total expenses label",fieldName:"expense_total_label",dataType:"string"},{cellRange:"K35:AD35",description:"Total expenses by time interval",fieldName:"expense_totals",dataType:"decimal"},{cellRange:"J38",description:"Profit/Loss overview section header",fieldName:"profit_loss_section_label",dataType:"string"},{cellRange:"J40",description:"Profit/Loss row label",fieldName:"profit_loss_label",dataType:"string"},{cellRange:"K40:AD40",description:"Profit/Loss values by time interval",fieldName:"profit_loss_values",dataType:"decimal"}]){let b=f.utils.decode_range(a.cellRange),c=[];if(b.s.r===b.e.r&&b.s.c===b.e.c){let c=l[f.utils.encode_cell({r:b.s.r,c:b.s.c})],d=c&&void 0!==c.v?c.v:null;"decimal"===a.dataType&&null!==d&&(d=parseFloat(d),isNaN(d)&&(d=null)),m[a.fieldName]=d}else if(b.s.c===b.e.c){for(let d=b.s.r;d<=b.e.r;++d){let e=l[f.utils.encode_cell({r:d,c:b.s.c})],g=e&&void 0!==e.v?e.v:null;"decimal"===a.dataType&&null!==g&&(g=parseFloat(g),isNaN(g)&&(g=null)),c.push(g)}m[a.fieldName]=JSON.stringify(c)}else{for(let d=b.s.c;d<=b.e.c;++d){let e=l[f.utils.encode_cell({r:b.s.r,c:d})],g=e&&void 0!==e.v?e.v:null;"decimal"===a.dataType&&null!==g&&(g=parseFloat(g),isNaN(g)&&(g=null)),c.push(g)}m[a.fieldName]=JSON.stringify(c)}}await h.query("DELETE FROM user_excel_data WHERE user_id = $1",[e]);let n=Object.keys(m).join(", "),o=Object.keys(m).map((a,b)=>`$${b+4}`).join(", "),p=Object.values(m),q=`INSERT INTO user_excel_data (user_id, file_name, ${n}) VALUES ($1, $2, ${o})`;await h.query(q,[e,g,...p]),b.status(200).json({message:"Excel file uploaded and processed successfully!",data:m})}catch(a){if(console.error("Error processing Excel upload:",a),a.message.includes("Cannot read property 'SheetNames' of undefined")||a.message.includes("Unsupported shared string table")||a.message.includes("file is not a zip file"))return b.status(400).json({message:"Invalid Excel file format or corrupted file. Please upload a valid .xlsx or .xls file."});b.status(500).json({message:"An internal server error occurred during Excel processing."})}finally{await h.end()}}d()}catch(a){d(a)}})},7726:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{config:()=>o,default:()=>n,handler:()=>m});var e=c(9046),f=c(8667),g=c(3480),h=c(6435),i=c(7442),j=c(8112),k=c(8766),l=a([i]);i=(l.then?(await l)():l)[0];let n=(0,h.M)(i,"default"),o=(0,h.M)(i,"config"),p=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/upload-excel",pathname:"/api/upload-excel",bundlePath:"",filename:""},userland:i,distDir:".next",projectDir:""});async function m(a,b,c){let d=await p.prepare(a,b,{srcPage:"/api/upload-excel"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h}=d;try{let c=a.method||"GET",d=(0,j.getTracer)(),e=d.getActiveScopeSpan(),i=p.instrumentationOnRequestError.bind(p),l=async e=>p.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:void 0,multiZoneDraftMode:!0,trustHostHeader:void 0,previewProps:h.preview,propagateError:!1,dev:p.isDev,page:"/api/upload-excel",projectDir:"",onError:(...b)=>i(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==k.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await l(e):await d.withPropagatedContext(a.headers,()=>d.trace(k.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:j.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},l))}catch(a){if(p.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}d()}catch(a){d(a)}})}};var b=require("../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[169],()=>b(b.s=7726));module.exports=c})();