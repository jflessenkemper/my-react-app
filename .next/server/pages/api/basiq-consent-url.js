"use strict";(()=>{var a={};a.id=16,a.ids=[16],a.modules={1734:(a,b,c)=>{c.r(b),c.d(b,{config:()=>m,default:()=>l,handler:()=>o});var d={};c.r(d),c.d(d,{default:()=>i});var e=c(9046),f=c(8667),g=c(3480),h=c(6435);async function i(a,b){if(console.log("\uD83D\uDD17 [BASIQ-CONSENT-URL] Request received"),console.log("\uD83D\uDD17 [BASIQ-CONSENT-URL] Method:",a.method),console.log("\uD83D\uDD17 [BASIQ-CONSENT-URL] Body:",a.body),"POST"!==a.method)return console.log("❌ [BASIQ-CONSENT-URL] Invalid method:",a.method),b.status(405).json({message:"Method Not Allowed"});let{basiqUserId:c}=a.body;if(!c)return console.log("❌ [BASIQ-CONSENT-URL] Missing basiqUserId"),b.status(400).json({message:"Basiq User ID is required"});try{console.log("\uD83D\uDD17 [BASIQ-CONSENT-URL] Getting CLIENT_ACCESS token for user:",c);let d=await fetch(`${a.headers.origin||"http://localhost:3000"}/api/basiq-auth`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({scope:"CLIENT_ACCESS",userId:c})});if(!d.ok){let a=await d.text();return console.error("❌ [BASIQ-CONSENT-URL] Auth failed:",a),b.status(500).json({message:"Failed to get CLIENT_ACCESS token"})}let e=await d.json();console.log("✅ [BASIQ-CONSENT-URL] Got CLIENT_ACCESS token");let f=`https://consent.basiq.io/home?token=${e.access_token}`;console.log("✅ [BASIQ-CONSENT-URL] Generated consent URL"),b.status(200).json({consentUrl:f,clientToken:e.access_token,basiqUserId:c})}catch(a){console.error("❌ [BASIQ-CONSENT-URL] Exception:",a),b.status(500).json({message:"An internal server error occurred during consent URL generation.",error:a.message})}}var j=c(8112),k=c(8766);let l=(0,h.M)(d,"default"),m=(0,h.M)(d,"config"),n=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/basiq-consent-url",pathname:"/api/basiq-consent-url",bundlePath:"",filename:""},userland:d,distDir:".next",projectDir:""});async function o(a,b,c){let d=await n.prepare(a,b,{srcPage:"/api/basiq-consent-url"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h}=d;try{let c=a.method||"GET",d=(0,j.getTracer)(),e=d.getActiveScopeSpan(),i=n.instrumentationOnRequestError.bind(n),l=async e=>n.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:void 0,multiZoneDraftMode:!0,trustHostHeader:void 0,previewProps:h.preview,propagateError:!1,dev:n.isDev,page:"/api/basiq-consent-url",projectDir:"",onError:(...b)=>i(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==k.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await l(e):await d.withPropagatedContext(a.headers,()=>d.trace(k.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:j.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},l))}catch(a){if(n.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}},5600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")}};var b=require("../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[169],()=>b(b.s=1734));module.exports=c})();